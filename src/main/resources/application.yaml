
api-prefix: /api

spring:
  thymeleaf:
    cache: false
    check-template-location: true
    prefix: classpath:/templates/
    suffix: .html
    enabled: true
  mvc:
    static-path-pattern: /static/**

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${postgres_host}:${postgres_port}/${postgres_db}?characterEncoding=utf8&serverTimezone=Asia/Seoul
    username: ${postgres_username}
    password: ${postgres_password}


  jpa:
    hibernate:
      ddl-auto: create

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${google_client_id} #(클라이언트 ID)
            client-secret: ${google_client_secret} #(클라이언트 보안 비밀번호)
            redirect-uri: ${google_redirect_uri} # 커스텀 리다이렉트 URI 가 안되는 이유 찾아보기
            scope:
              - profile
              - email
          kakao:
            client-id: 167c38f69a54ab1163035776add4b54d
            # Spring OAuth2 기본 리다이렉트 url 형태 ( {base-url}/login/oauth2/code/{registrationId} )
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: kakao
            # POST 로 작성하기도 하지만 (Spring security 5.6 이전 버전 ~5.5)
            # 현재 버전(6.1.1)에서는 client_secret_post 로 해야 적용이됨
            # client-authentication-method: POST
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - profile_image
        #              - account_email

        # OAuth 사용에 필요한 값에 대한 매핑 정보
        provider:
          google:
            authorizationUri: https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&prompt=consent
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            # 카카오가 회원정보를 json으로 넘겨주는데, id라는 키값으로 리턴해준다.
            userNameAttribute: id
            jwkSetUri: https://kauth.kakao.com/oauth/token

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region: ${AWS_STATIC_REGION}
    s3:
      bucket: ${AWS_S3_BUCKET}